name: Build and Deploy Hugo Site to Yandex Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  HUGO_VERSION: "0.128.0"
  AWS_CLI_VERSION: "2.22.35"

jobs:
  build:
    runs-on: self-hosted
    container:
      image: ubuntu:20.04
    name: Build Hugo pages → artifact
    steps:
      - name: Install Git
        run: apt-get update && apt-get install -y git
        
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Mark repository as safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
      - name: Ensure submodules are at correct commit
        run: git submodule update --init --recursive --checkout

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Build site
        run: hugo --minify

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-folder
          path: ./public

  deploy:
    runs-on: self-hosted
    container:
      image: ubuntu:20.04
    name: Deploy to Yandex Object Storage via AWS CLI
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: public-folder
          path: ./public

      - name: Install curl
        run: apt-get update && apt-get install -y curl

      - name: Install unzip
        run: apt-get update && apt-get install -y unzip

      - name: Install AWS CLI ${{ env.AWS_CLI_VERSION }}
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${{ env.AWS_CLI_VERSION }}.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region ru-central1  # замените на нужный регион, если необходимо

      - name: Deploy to S3 bucket
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          echo $BUCKET_NAME
          aws s3 sync ./public/ s3://$BUCKET_NAME/ --delete --endpoint-url https://storage.yandexcloud.net
